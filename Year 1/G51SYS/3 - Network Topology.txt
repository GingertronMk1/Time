3 - Network Topology

    Connecting Computers
        Connecting 2 computers is farily straightforward
        Run a cable from one to the other
        But what if we want to connect 3 computers?
            Or four? Or five?
            Connect each computer to every other
                But every time, you need to add more cables, more ports, etc
                Complete ball-ache
            We use a shared medium

    Shared Medium
        Each computer connects to one shared hub
        This hub shuffles information between all the computers on the network
        One connection, and port, per device
        Only one computer can talk at a time
        Need control over who accesses it
        Otherwise data will get garbled
        Control
            Who can send
            How long they can send for
            We need a mechanism to stop a computers monopolising the connection
                We break up the comm into packets
                Then allow each computer to send a packet in turn
                This is called time-division multiplexing
            Each computer can now communicate properly

    Packet Switching
        The idea is simple
        Take a long message, break it down into chunks
        Each chunk is sent across the shared medium
        The chunks get put back together at the other end
            IKEA networking
        We also need to know which machine it's for; we give it an address
    
    Packets
        We need to know how big the packets could be (up to 4 bytes, for instance)
        Could send the size over in a header
        Or have a start and stop packet, Ã  la RS232
            This could cause a problem, as we may not be able to differentiate between start/stop packets and the message
            To get around this, we use a technique called byte stuffing
            If we want S as a start and E as an end packet, but we want to send an E, we send zE, for example
                Like escaping in a printf command
                Means packets have to be filled differently
        An unexpected benefit of this approach is that due to the imperfect universe, comms media aren't perfect
            If we send in packets, and one of them throws up an error, we only need to resend the relevant packets, not the whole message

    LAN Topology
        There are many ways to connect computers together
        This is to do with the logical way things are connected, not physically
        Star Network
            The central point or hub is conneected to each device on the network
            The other devices aren't connected to each other otherwise
        Ring Network
            There's a ring (shocker) and all the devices are connected to the next one in the ring
            Data passes through devices in the network
            2 ports, one cable per machine
            The ring forms a closed loop, data travels in only one direction around it
            Good for error correction: data goes from one computer to the next, and back
                The computer that transmitted can check its own data
            If one connection is broken, the whole network's knackered
            Easy to coordinate access
                Use a token that gets passed around the ring
        Bus Network
            Shared medium is a piece or two of wire to which each device connects
            Any device can put signal onto the wire
            This signal is carried to all devices on the wire
                Intended recipient can recieve it
                As can all of the others
            Need to make sure only one computer transmits at any one time
            Ethernet
                Orignally a bus network
                Sended transmits a modulated carrier wave
                When transmitting a frame (packet), the sender gets to use the whole cable
                Very clever and simple algorithm deal with collisions
                Doesn't use one centralised controller
                If a computer wants to transmit, it looks to see if there's anything else transmitting
                    If there is, it waits until the transmission's finished
                    If not, it can send
                    Hence the term Carrier Sense
                    But what happens if two computers look at the same time and find the network empty?
