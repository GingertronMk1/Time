7 - Routing

    Introduction
        We've mostly looked at a single LAN so far
        Although we have touched on IP as a packet format
        Today we're looking at how we can build a network of networks

    Network Interfaces
        Discussions so far have assumed that a computer only has the one NIC
        This doesn't need to be the case
        Nothing stops us putting more than one card in a computer
        This very laptop has 3: WiFi, Ethernet, and Bluetooth

    Packet Forwarding
        What if we let a computer with two NICs copy packets from one network to another?
        This is called packet forwarding, or routing
        The compuer needs to be set up explicitly to forward packets
        Often called a router or packet switch
        Usually a dedicated machine
        Often built with dedicated hardware designed to forwards packets faster
        But nothing's stopping it being done with standard hardware

    Digression: Bridging
        There's a similar concept at OSI Layer 2 called bridging
        A bridge forwards packets from one network to another
        They're usually the same network type
        The bridge copies any packets recieved on one interface to the other interface
        This joins the two segments

    Routing
        Routing tends to be a Layer 3 concept
        Computers are sending packets with the destination specifying bothe the network and computer address
        Router only passes a packet onto the other network if it's explicitly sent to that network
        Traffic between these two networks is massively reduced
        In routing, the packet gets rewrapped into a different Layer 2 packet
            This means the networks don't need to be the same type anymore
            They could even be connected via a long point-to-point link
            The router doesn't necessarily need to be connected directly to the destination network
            It might send the packet to a second (or third...) router which is connected to that network

    Store and Forward
        The router fully recieves the packet before sending it out on the destination network
        The networks might be of differing speeds
        Or might be recieving packets from two networks for the same destination network
        The router needs memory to buffer the packets as they arrive before sending them out

    Routing Table
        How does a computer know where to send a packet?
        It's complicated now that there are multiple networks
            You can't just stick a packet on the bus and send it along
        The computer doesn't need to know the whole path to any machine
            Just the next hop
        These hops are stored in the routing table
        Each machine's routing table maps a destination address to a next hop
            This next hop is just the address of the next machine to send it to
        Each computer will have its own, and possible different routing table
            This depends on how it's connected to the network
        This should guarantee two things
            Universal routing - there's a next hop for every possible destination
            Optimal routes - the next hop should give the shortest path to the destination
        It's helpful to use graphs to model networks
        How is it constructed?
            Could program it manually - doable for smaller networks
            Usually it'll be built up automatically by the router
            2 approaches: static and dynamic
        Static Routing Table
            Constructed hen the router boots
            Figures out possible routes to the different networks and fills in the table
            Doesn't change until the machine's rebooted
            Simple, but quite rigid
                Can't adapt to network changes
                It'd still try to send packets over dead links
        Dynamic Routing Table
            A program on the router builds an initial table at boot
            The table updates as network conditions change
            Routers talk to one another informing them of changes
            More complex, but flexible and autonomous
            As various routes fail, the system can route around them
        Building Routing Tables
            How are they built
            Software models the network as a graph
            Nodes are the networks, edges are the links between edges
            Each edge is given a weight
            Distance between two nodes is the sum of the distances of the paths between them
            We can use something like Dijkstra's Algorithm to figure out the shortest path
            Might not be the route you'd expect

    Next Hop Routing
        Very simple
        Computer looks up what the next hop is for a particular destination
            And sends thepacket to it via its network connection
        If that machine isn't the destination it looks in its routing table what the next hop is
            And so on and so forth
        The next hop is entirely dependent on the destination
            Not the packet's source
            Or thr route it took to get there
            This is known as source independence
        Packets are treated identically regardless of source

    Default Route
        We can often have a lot of identical routes
        Routing tables allow the concept of a default route
        This allows for a much smaller routing table

    Distributed Routing Algorithms
        Dijkstra's works if all the edges are known, but that might not be the case
        You can use a distibuted algorithm to build the table
        Routes build up a table of what they know and then pass it on to their peers
        When they receive these messages, they can update their own routing tables
        And send them out again
        2 main algorithms
            Vector-Distance Routing
                Status messages are pairs of destinations each router can reach plus the distance
                On receipt, router updates its table if it finds a shorter path
            Link-State Routing
                Routers communicate details of when links go up or down
                Other routers use this to build up a graph of the network that they can then use to
                    calculate the shortest paths
                Tends to be faster to cope with links going down

    IP Routing
        Introduction
            We've seen how we can route between networks
            We'll consider now IPv4

        Routing Table
            As earlier, computers on the internet use routing tables to direct packets
            This lists which is the next hop to take depending on the destination IP address
            The routing tables specifies IP network address and netmask
                Network address is the prefix for the IP address
                Netmask just specifies which bits of the IP address are significant
            This is built in a distributed fashion using a protocol called BGP4
            Routes are exchanged between autonomous systems
                Each autonomous system advertises IP prefixes to its peers
                Effectively saying it can provide a connection to that network
            BGP4
                Routers exchange details about what connections they can provide to each other

        Netmask and Next Hop
            Netmask can be used very simply to test a destination IP address
                To see if the IP address is in a specific network
                Just AND the destination IP address, with the netmask for the network, bit by bit
                If the IP is in the network, the result will be equal to the network address
                So the packet gets sent out on that next hop

        Core Routers and Edge Routers
            Core routers are routers within a network that route packets within one entities network
            Edge routers are routers that connect one entities network to another entities network

        Firewall
            Since an edge router can see all packets, it can also inspect them to see what they are
                It can also drop packets we don't want
                    eg to stop people accessing a certain server
            Routing is usually stateless, but firewalling can require the router to keep the state
                of connections (particularly TCP)

        Network Address Translation
            IPv4 has run out of IP addresses
            One approach taken to mitigate this is Network Address Translation
            A mechanism to hide several amchines behind one IP address
            Several blocks of IP addresses are designated as not allowed on the internet
                But can be used internally by a router
            As packets flow into the router, it modifies the source IP address and source port to
                one that's valid on the Internet

        Peering vs Transit
            Networks are said to peer with each other if they exchange packets directly
            If you've to go through a third AS, that AS is providing transit
