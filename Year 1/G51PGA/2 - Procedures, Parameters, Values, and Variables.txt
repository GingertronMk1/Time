(G51PGA) 1 - Procedures, Parameters, Values, and Variables

    Overview
        Programming
            Fundamentals of algoriths and procedures
            Basics of C
                Statements and functions
            Details of functions
                Anatomy
                Defining and declaring functions
            Variables
                Declarations and types
                Assigning and changing values

    Algorithms and Procedures
        An algorithm is, in essence, a recipe
            A sequence of small steps followed in order (usually)
            There can be different algorithms for the same task
            Algorithms are independent of language
        Several algorithms can be grouped into a procedure
        C is a procedural language
            All instructions are inside a procedure
        Procedures break large tasks into many smaller sub-problems
            The smaller probems are easier to implement
        Program's Procedures
            Programs are defined in terms of procedures
            Some tasks are common across programs
                Like print
            In C, procedures tend to be called functions, as they can return a value
                C programs start with the main() function
                In C though, some functions return no value, like void()

    First Steps in C
        C provides a minimal set of operations
        Everything else is handled by functions
        There's a library of functions that do common tasks
        We can create new functions for uncommon tasks

        Compiling C
            We write in a text editor
            And compile in a compiler (duh)

        C Statements
            Maths operations
            Variable manipulation
            Defining new functions

    Function Anatomy
        return-type function-name(parameter declarations){
            variable declarations
            statements
        }

    Defining a function
        Where do they go in the source file?
            On the same 'level' as main, ie outside of main
            If we call a function in main() that's been created outside of main(), it doesn't know what the function is
            Compiler error
                Computer Scientist swears
            So, we define functions before main()
                This isn't always possible
                So we use a function declaration
                    A false statement that tells the compiler what the function is without defining it
                    We use void FunctionName() as a 'placeholder'
                    
    Program Flow
        IMPORTANT
        Programs usually flow from statement to statement
            But not always
        Controlling the order of execution gives us a degree of power
        Calling functions
            The current function stops
            The function called begins executing
            When it's finished, the function it interrupted starts from where it left off
        #include Files
            Can end up delacring loads of procedures
            Rather than declaring them, we can just #include a library that has them all ready to go
                #include basically copies and pastes a shitload of function declarations into your code
                To search system directories, use <>
                To search the current directory, use ""
            DO NOT EVER EDIT .h FILES

    Data and Variables
        Program = Algorithms + Data
        A variable is somewhere where we store data
            We give them names that we use to access them
            The value can change (vary, haha) as the program goes on
        Some variables are stored for a long time, others not so much
            Variables can be declared within 1 function, and will be 'forgotten' in the next
        In C, variables have a type
            This is what kind of data the variable can store
            C gives us a few basic types
                But you can specify your own, more complicated types
                And specify where they're stored

    Size and Signedness
        Integers in C can be signed or unsigned
            Signed goes from -2*10^9 to 2*10^9
            Unsigned goes from 0 to 4*10^9

    Declaring Variables
        Variables have to be declared before they can be used
        Variables are declared similarly to functions, just without the () at the end
        Variable names must begin with a letter, but can be followed by anything
        There are some reserved keywords that can't be used for your own variables

    Naming Conventions
        Use CamelCase for readability
            eg mySpecialNewVariable
        Use meaningful names, preferably shorter names
        Single characters for loop indices or local variables


