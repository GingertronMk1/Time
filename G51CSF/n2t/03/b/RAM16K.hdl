// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
    RAM4K(in=in,load=loadA,address=address[0..11],out=outRAM1);
    RAM4K(in=in,load=loadB,address=address[0..11],out=outRAM2);
    RAM4K(in=in,load=loadC,address=address[0..11],out=outRAM3);
    RAM4K(in=in,load=loadD,address=address[0..11],out=outRAM4);
    RAM4K(in=in,load=loadE,address=address[0..11],out=outRAM5);
    RAM4K(in=in,load=loadF,address=address[0..11],out=outRAM6);
    RAM4K(in=in,load=loadG,address=address[0..11],out=outRAM7);
    RAM4K(in=in,load=loadH,address=address[0..11],out=outRAM8);

    Mux8Way16(a=outRAM1,b=outRAM2,c=outRAM3,d=outRAM4,e=outRAM5,f=outRAM6,g=outRAM7,h=outRAM8,sel=address[12..14],out=out);
    DMux8Way(in=load,sel=address[12..14],a=loadA,b=loadB,c=loadC,d=loadD,e=loadE,f=loadF,g=loadG,h=loadH);

}
