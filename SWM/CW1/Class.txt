GameState
    GameOverState:      Main/GamePanel
                        Manager/Content
                        Data
                        GameStateManager
                        JukeBox
                        Keys
    GameState:          Manager/GameStateManager
    IntroState:         Main/GamePanel
                        Manager/GameStateManager
                        Keys
    MenuState:          Manager/Content
                        GameStateManager
                        JukeBox
                        Keys
    PauseState:         Manager/Content
                        GameStateManager
                        JukeBox
                        Keys
    PlayState:          Entity/Diamond
                        Item
                        Player
                        Sparkle
                        HUD/Hud
                        Main/GamePanel
                        Manager/Data
                        GameStateManager
                        JukeBox
                        Keys
                        TileMap/TileMap

Main
    Game:               None
    GamePanel:          Manager/GameStateManager
                        Keys

Manager
    Content:            None
    Data:               None
    GameStateManager:   GameState/GameOverState
                        GameState
                        IntroState
                        MenuState
                        PauseState
                        PlayState
    JukeBox:            None
    Keys:               None

First I looked at the Main package. GamePanel is a part of Game, and everything else is a part of GamePanel, so
GamePanel is an aggregation of game; it cannot function without game. GameStateManager is then an aggregation of
GamePanel, as it cannot function without it and imports/uses parts of GamePanel. GameState and GameStateManager have a
bidirectional relationship, as GSM takes parts and functions from GS, and vice-versa.

Everything else in the package GameState inherits GameState, so they're all inheritance relationships.

In Manager, GameStateManager depends on JukeBox (it initializes it, and uses its functions, but JukeBox doesn't do
anything with GSM). Data is used only in PlayState and GameOverState, so these are bidirectional relationships. 

Content is only referenced in GameOverState, PauseState, and MenuState; they aggregate it with other things from other classes.
Hence, aggregation relationships.
